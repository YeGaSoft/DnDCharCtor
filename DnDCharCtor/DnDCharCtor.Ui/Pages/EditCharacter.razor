<FluentLayout Style="height: 90vh">
    <FluentHeader>
        <FluentStack VerticalAlignment="VerticalAlignment.Center" HorizontalAlignment="HorizontalAlignment.Center">
            <FluentLabel Typo="Typography.PaneHeader">@ViewModel.Title</FluentLabel>
        </FluentStack>
    </FluentHeader>

    <FluentBodyContent>
        <FluentGrid Style=@($"""background-color: var(--neutral-layer-3); padding: 4px; {(ViewModel.HasValidationErrors ? "border-color: red; border-width: medium;" : "")}""")>
            <FluentGridItem xs="12" sm="12" md="6" lg="4" xl="3" xxl="2" HiddenWhen="@(ViewModel.CharacterViewModelToEdit!.PersonalityViewModel.Search(SearchText ?? string.Empty, true) ? GridItemHidden.None : GridItemHidden.XsAndUp)">
                <PersonalityCard @ref="personalityCardRef" @bind-ViewModel="@(ViewModel.CharacterViewModelToEdit.PersonalityViewModel)"
                                 PreviousCard="@rescueDiceCardRef" NextCard="@propertiesCardRef" />
            </FluentGridItem>
            <FluentGridItem xs="12" sm="12" md="6" lg="4" xl="3" xxl="2" HiddenWhen="@(ViewModel.CharacterViewModelToEdit!.PropertiesViewModel.Search(SearchText ?? string.Empty, true) ? GridItemHidden.None : GridItemHidden.XsAndUp)">
                <PropertiesCard @ref="propertiesCardRef" @bind-ViewModel="@(ViewModel.CharacterViewModelToEdit.PropertiesViewModel)"
                                PreviousCard="@personalityCardRef" NextCard="@rescueDiceCardRef" />
            </FluentGridItem>
            <FluentGridItem xs="12" sm="12" md="6" lg="4" xl="3" xxl="2" HiddenWhen="@(ViewModel.CharacterViewModelToEdit!.RescueDicesViewModel.Search(SearchText ?? string.Empty, true) ? GridItemHidden.None : GridItemHidden.XsAndUp)">
                <RescueDicesCard @ref="rescueDiceCardRef" @bind-ViewModel="@(ViewModel.CharacterViewModelToEdit.RescueDicesViewModel)"
                                 PreviousCard="@propertiesCardRef" NextCard="@skillsCardRef" />
            </FluentGridItem>
            <FluentGridItem xs="12" sm="12" md="6" lg="4" xl="3" xxl="2" HiddenWhen="@(ViewModel.CharacterViewModelToEdit!.RescueDicesViewModel.Search(SearchText ?? string.Empty, true) ? GridItemHidden.None : GridItemHidden.XsAndUp)">
                <SkillsCard @ref="skillsCardRef" @bind-ViewModel="@(ViewModel.CharacterViewModelToEdit.SkillsViewModel)"
                            PreviousCard="@rescueDiceCardRef" NextCard="@personalityCardRef" />
            </FluentGridItem>
        </FluentGrid>
        <br />
    </FluentBodyContent>
    
    <FluentFooter>
        <FluentGrid Justify="JustifyContent.SpaceBetween" Style="width: 100%;">
            <FluentGridItem xs="12">
                <FluentSpacer />
            </FluentGridItem>
            <FluentGridItem xs="6" md="3">
                <FluentButton Style="width: 100%;" OnClick="Reset" IconStart="@(new Icons.Regular.Size20.ArrowReset())">@StringResources.Button_Reset</FluentButton>
            </FluentGridItem>
            <FluentGridItem xs="6" md="3">
                <FluentButton Style="width: 100%;" OnClick="SaveChanges" Appearance="Appearance.Accent" IconStart="@(new Icons.Regular.Size20.Save())">@StringResources.Button_Save</FluentButton>
            </FluentGridItem>
            <FluentGridItem xs="12" md="6">
                <DebouncedSearch @bind-SearchText="@SearchText" PlaceHolder="@StringResources.Search_CardsPlaceholder" Style="width: 100%" />
            </FluentGridItem>
        </FluentGrid>
    </FluentFooter>
</FluentLayout>

<!--This break ensures that the button is not completely at the end of the page-->
<br />
