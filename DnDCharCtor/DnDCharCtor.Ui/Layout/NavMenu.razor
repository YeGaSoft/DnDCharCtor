<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">@StringResources.App_DnDCharCtor</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" style="display: flex; width=100%;" href="" Match="NavLinkMatch.All">
                <FluentIcon Value="@(new Icons.Regular.Size20.Home())" Color="Color.Custom" CustomColor="white" />
                <FluentSpacer Width="10" />
                <FluentLabel Color="Color.Custom" CustomColor="white">@StringResources.Page_Home</FluentLabel>
            </NavLink>
        </div>

        @if (string.IsNullOrWhiteSpace(ViewModel?.PersonalityViewModel.CharacterName) is false)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" style="display: flex; width=100%" href="@Routes.CurrentCharacter">
                    <FluentIcon Value="@(new Icons.Regular.Size20.Person())" Color="Color.Custom" CustomColor="white" />
                    <FluentSpacer Width="10" />
                    <FluentLabel Color="Color.Custom" CustomColor="white">@ViewModel?.PersonalityViewModel.CharacterName</FluentLabel>
                </NavLink>
            </div>
        }

        @if (EditCharacterViewModel.EditMode is EditMode.Edit)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" style="display: flex; width=100%" href="@Routes.EditCharacter">
                    <FluentIcon Value="@(new Icons.Regular.Size20.EditPerson())" Color="Color.Custom" CustomColor="white" />
                    <FluentSpacer Width="10" />
                    <FluentLabel Color="Color.Custom" CustomColor="white">@StringResources.Page_Edit</FluentLabel>
                </NavLink>
            </div>
        }

        <div class="nav-item px-3">
            @{
                // When we are in Edit-Mode we want to `ForceNew` (to force create a new character).
                // But when we are in Create-Mode, it means a new character-creation was already started and thus we want to continue editing/creating.
                var route = EditCharacterViewModel.EditMode is EditMode.Edit ? Routes.CreateCharacter : Routes.EditCharacter;
            }
            <NavLink class="nav-link" style="display: flex; width=100%" href="@route">
                <FluentIcon Value="@(new Icons.Regular.Size20.PersonAdd())" Color="Color.Custom" CustomColor="white" />
                <FluentSpacer Width="10" />
                <FluentLabel Color="Color.Custom" CustomColor="white">@StringResources.Page_Create</FluentLabel>
            </NavLink>
        </div>

        <br />
        <FluentDivider />
        <br />

        <div class="nav-item px-3">
            <NavLink class="nav-link" style="display: flex; width=100%" href="@Routes.Settings">
                <FluentIcon Value="@(new Icons.Regular.Size20.AppsSettings())" Color="Color.Custom" CustomColor="white" />
                <FluentSpacer Width="10" />
                <FluentLabel Color="Color.Custom" CustomColor="white">@StringResources.Page_Settings</FluentLabel>
            </NavLink>
        </div>
    </nav>
</div>

