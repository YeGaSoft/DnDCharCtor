@inherits EditableCardAbstraction<PropertiesViewModel, EditPropertiesDialog>

<EditableCardBase Title="@StringResources.Character_Properties" EditButtonText="@EditButtonText" EditButtonIcon="@EditButtonIcon" EditButtonCallback="EditAsync" CardClickCallback="EditAsync" HasValidationErrors="@(ViewModel.HasValidationErrors)">
    <br />
    <div><strong>@StringResources.Character_Strength (@StringResources.Character_Properties_AbilityScore):</strong> @ViewModel.Strength </div>
    <div><strong>@StringResources.Character_Strength (@StringResources.Character_Properties_StatModifier):</strong> @(ViewModel.Strength.ToInt() is int strength ? DndRulesService.CalculateStatModifier(strength) : string.Empty) </div>
    <br />
    <div><strong>@StringResources.Character_Skillfulness (@StringResources.Character_Properties_AbilityScore):</strong> @ViewModel.Skillfulness </div>
    <div><strong>@StringResources.Character_Skillfulness (@StringResources.Character_Properties_StatModifier):</strong> @(ViewModel.Skillfulness.ToInt() is int skillfulness ? DndRulesService.CalculateStatModifier(skillfulness) : string.Empty) </div>
    <br />
    <div><strong>@StringResources.Character_Constitution (@StringResources.Character_Properties_AbilityScore):</strong> @ViewModel.Constitution </div>
    <div><strong>@StringResources.Character_Constitution (@StringResources.Character_Properties_StatModifier):</strong> @(ViewModel.Constitution.ToInt() is int constitution ? DndRulesService.CalculateStatModifier(constitution) : string.Empty) </div>
    <br />
    <div><strong>@StringResources.Character_Intelligence (@StringResources.Character_Properties_AbilityScore):</strong> @ViewModel.Intelligence </div>
    <div><strong>@StringResources.Character_Intelligence (@StringResources.Character_Properties_StatModifier):</strong> @(ViewModel.Intelligence.ToInt() is int intelligence ? DndRulesService.CalculateStatModifier(intelligence) : string.Empty) </div>
    <br />
    <div><strong>@StringResources.Character_Wisdom (@StringResources.Character_Properties_AbilityScore):</strong> @ViewModel.Wisdom </div>
    <div><strong>@StringResources.Character_Wisdom (@StringResources.Character_Properties_StatModifier):</strong> @(ViewModel.Wisdom.ToInt() is int wisdom ? DndRulesService.CalculateStatModifier(wisdom) : string.Empty) </div>
    <br />
    <div><strong>@StringResources.Character_Charisma (@StringResources.Character_Properties_AbilityScore):</strong> @ViewModel.Charisma </div>
    <div><strong>@StringResources.Character_Charisma (@StringResources.Character_Properties_StatModifier):</strong> @(ViewModel.Charisma.ToInt() is int charisma ? DndRulesService.CalculateStatModifier(charisma) : string.Empty) </div>
    <br />
    <div><strong>@StringResources.Character_Inspiration (@StringResources.Character_Properties_AbilityScore):</strong> @ViewModel.Inspiration </div>
    <br />
    <div><strong>@StringResources.Character_TrainingBonus:</strong> @ViewModel.TrainingBonus </div>
    <br />
    <div><strong>@StringResources.Character_PassiveWisdomRecognition:</strong> @ViewModel.PassiveWisdomRecognition </div>
</EditableCardBase>
